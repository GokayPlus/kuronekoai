import gradio as gr
import sys
import os
import uuid
from datetime import datetime
from deep_translator import GoogleTranslator

# üìÅ Script yolunu tanƒ±t
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from scripts.generate_image import generate_image, edit_image
from scripts.ask_ai import ask_ai

SAVE_DIR = "images/output"
os.makedirs(SAVE_DIR, exist_ok=True)

def slugify(text):
    return "".join(c if c.isalnum() else "_" for c in text.lower())[:40]

def unique_filepath(base_path):
    if not os.path.exists(base_path):
        return base_path
    name, ext = os.path.splitext(base_path)
    i = 1
    while True:
        new_path = f"{name} ({i}){ext}"
        if not os.path.exists(new_path):
            return new_path
        i += 1

# Bu fonksiyonlar UI tarafƒ±nda da kullanƒ±lƒ±yor
def translate_to_english(text):
    try:
        return GoogleTranslator(source='auto', target='en').translate(text)
    except:
        return text

def detect_language(text):
    try:
        return GoogleTranslator(source='auto', target='en').detect(text)
    except:
        return "en"

def translate_back_to_original(text, lang):
    if lang == "en":
        return text
    try:
        return GoogleTranslator(source='en', target=lang).translate(text)
    except:
        return text

def kuroneko_chat_ui(user_input, history):
    if not history:
        konata_ascii = """
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°§‚†∂‚†ö‚†â‚¢â‚£©‚†Ω‚†ü‚†õ‚†õ‚†õ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚†â‚†Ä‚¢Ä‚£†‚†û‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°û‚†Å‚†Ä‚†Ä‚£∞‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚°§‚†§‚†Ñ‚¢§‚£Ñ‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†¥‚†í‚†ã‚†â‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚†¥‚†í‚†ã‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚°Ñ‚†Ä‚†Ä‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†û‚¢≥‚°Ñ‚¢Ä‚°¥‚†ö‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†¥‚†ö‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†ò‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†É‚†Ä‚†Ä‚†π‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£¥‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†≥‚¢¨‚£≥‚£Ñ‚£†‚†§‚†§‚†∂‚†∂‚†í‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†õ‚†≤‚¢¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†§‚†ñ‚†ã‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†±‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢≥‚†¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ñ‚†ã‚†Ä‚†Ä‚†Ä‚£†‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢±‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚¢É‚†à‚†ô‚†≤‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†û‚†Å‚†Ä‚†Ä‚†Ä‚¢Ä‚¢æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢¢‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢£‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£π‚†Æ‚£Ñ‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†ã‚†Ä‚†Ä‚¢Ä‚°§‚°¥‚†É‚†à‚†¶‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∑‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†ò‚°Ñ‚†§‚†§‚¢§‚†î‚†í‚†Ç‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†ë‚¢Ñ‚°Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†É‚†Ä‚†Ä‚¢†‚£û‚†ü‚†Ä‚†Ä‚†Ä‚°Ñ‚†Ä‚†â‚†í‚†¢‚£§‚£§‚†Ñ‚£º‚¢ª‚†∏‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢§‚†Ä‚¢ø‚°ñ‚†í‚†ä‚¢¶‚†§‚†§‚£Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚°ù‚†≤‚¢§‚£Ä‚†ô‚¢¶‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚¢∞‚†É‚†Ä‚†Ä‚£¥‚£ø‚†é‚†Ä‚†Ä‚¢Ä‚£ú‚†§‚†Ñ‚¢≤‚†é‚†â‚†Ä‚†Ä‚°º‚†∏‚†ò‚°Ñ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚¢∏‚†ò‚¢Ü‚†Ä‚†ò‚°Ñ‚†Ä‚†Ä‚†Ä‚¢¢‚†â‚†â‚†Ä‚†í‚†í‚†Ω‚°Ñ‚†Ä‚†à‚†ô‚†Æ‚£∑‚°Ä
‚†Ä‚†Ä‚†Ä‚°ü‚†Ä‚†Ä‚£º‚¢ª‚†ß‚†ê‚†Ç‚†â‚°ú‚†Ä‚†Ä‚°∞‚°ü‚†Ä‚†Ä‚†Ä‚°∞‚†Å‚°á‚†Ä‚°á‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∫‚†á‚†Ä‚£Ü‚°®‚¢Ü‚†Ä‚¢Ω‚†Ä‚†Ä‚†Ä‚†à‚°∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚°Ñ‚†Ä‚†Ä‚†Ä‚†à‚†Å
‚†Ä‚†Ä‚¢∏‚†É‚†Ä‚†Ä‚¢É‚†é‚†Ä‚†Ä‚†Ä‚£¥‚†É‚†Ä‚°ú‚†π‚†Å‚†Ä‚†Ä‚°∞‚†Å‚¢†‚†Å‚†Ä‚¢∏‚¢∏‚†Ä‚†Ä‚†Ä‚¢†‚°∏‚¢£‚†î‚°è‚†Ä‚†à‚¢Ü‚†Ä‚£á‚†Ä‚†Ä‚†Ä‚¢∏‚†ò‚¢Ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢≥‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚°ú‚†Ä‚†Ä‚¢Ä‚°ú‚°û‚†Ä‚°ú‚†à‚†è‚†Ä‚†à‚°π‚†ë‚†í‚†º‚°Ä‚†Ä‚†Ä‚¢ø‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚¢á‚¢Å‚†Ä‚†Ä‚†à‚¢Ü‚¢∞‚†Ä‚†Ä‚†Ä‚†à‚°Ñ‚†à‚¢¢‚†Ä‚†Ä‚†Ä‚†à‚£á‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢∏‚°Ä‚†Ä‚¢∞‚†Å‚†Ä‚¢Ä‚¢Æ‚†Ä‚†á‚°ú‚†Ä‚†ò‚†Ä‚†Ä‚¢∞‚†É‚†Ä‚†Ä‚°á‚†à‚†Å‚†Ä‚¢ò‚°Ñ‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚£ò‚£º‚†§‚†§‚†§‚£à‚°û‚°Ä‚†Ä‚†Ä‚†Ä‚°á‚†∞‚°Ñ‚¢£‚°Ä‚†Ä‚†Ä‚¢ª‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†à‚°á‚†Ä‚°ú‚†Ä‚¢Ä‚†é‚¢∏‚¢∏‚¢∞‚†Å‚†Ä‚†Ñ‚†Ä‚¢†‚†É‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚°Ü‚†Ä‚†Ä‚£∂‚£ø‚°ø‚†ø‚°õ‚¢ª‚°ü‚°á‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚£ø‚£Ü‚¢°‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢†‚°è‚†Ä‚†â‚¢¢‚°é‚†Ä‚°á‚£ø‚†ä‚†Ä‚†Ä‚†Ä‚¢†‚°è‚†Ä‚†Ä‚†Ä‚†é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°∏‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚¢∞‚°Ü‚°á‚¢∏‚¢†‚¢π‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚¢π‚†à‚¢ß‚££‚†Ä‚†ò‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚°á‚¢π‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚¢†‚†É‚†Ä‚†Ä‚††‚†ü‚°Ø‚£ª‚£á‚¢É‚†á‚¢†‚†è‚°á‚†Ä‚¢∏‚°Ü‚†Ä‚¢∏‚†Ä‚†à‚¢≥‚°Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£á‚†Ä‚°î‚†ã‚°á‚†Ä‚¢±‚¢º‚†Ä‚†Ä‚°Ç‚£º‚°á‚¢π‚£∂‚£∂‚£∂‚£§‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚£á‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚£∂‚°≠‚¢É‚£è‚°ò‚†Ä‚°é‚†Ä‚†á‚†Ä‚°æ‚£∑‚†Ä‚£º‚†Ä‚†Ä‚†Ä‚¢ª‚°Ñ‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£π‚†ú‚†ã‚†â‚†ì‚¢Ñ‚°è‚¢∏‚†Ä‚†Ä‚¢≥‚°è‚¢∏‚†π‚¢Ä‚£â‚¢≠‚£ª‚°Ω‚†ø‚†õ‚†ì‚†Ä‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†õ‚†õ‚†ì‚†Ä‚°Ñ‚°á‚†Ä‚¢∏‚¢∞‚°á‚¢∏‚°Ñ‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢≥‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚£†‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ô‚†å‚°á‚†Ä‚£ø‚†Å‚†Ä‚°á‚°ó‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Å‚†Ä‚¢∏‚£º‚†Ä‚†à‚£á‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢∏‚†Å‚†Ä‚†Ä‚¢Ä‚°†‚†î‚†ö‚†â‚†â‚¢±‚£á‚¢∏‚¢ß‚†Ä‚†Ä‚†∏‚£±‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚°§‚†¶‚°î‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚†Ä‚†Ä‚£º‚°è‚†Ä‚†Ä‚¢π‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢∏‚†Ä‚†Ä‚†Ä‚†ã‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚†§‚£ø‚£æ‚£á‚£ß‚†Ä‚†Ä‚¢´‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢®‚†Ä‚†Ä‚£†‚†á‚†Ä‚†Ä‚¢Ä‚°†‚£∂‚†ã‚†Ä‚†Ä‚°∏‚£æ‚†Å‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢∏‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†ä‚†Å‚†Ä‚†Ä‚¢∏‚¢É‚†ò‚°ú‚°µ‚°Ä‚†à‚¢ø‚°±‚¢≤‚°§‚†§‚¢Ä‚£Ä‚£Ä‚°Ä‚†â‚†â‚£Ä‚°†‚°¥‚†ö‚†â‚£∏‚¢∏‚†Ä‚†Ä‚¢†‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†§‚†ö‚†ö‚£§‚£µ‚°∞‚°ë‚°Ñ‚†Ä‚¢£‚°à‚†≥‚°Ä‚†Ä‚†Ä‚†Ä‚¢®‚°ã‚†ô‚£Ü‚¢∏‚†Ä‚†Ä‚£∞‚¢ª‚°é‚†Ä‚†Ä‚°é‚°á‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†à‚¢∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚°∏‚¢å‚£≥‚£µ‚°à‚¢¶‚°Ä‚†≥‚°Ä‚†à‚¢¶‚°Ä‚†Ä‚†ò‚†è‚†≤‚£å‚†ô‚¢í‚†¥‚°ß‚£∏‚°á‚†Ä‚°∏‚¢∏‚†á‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚¢†‚£ø‚†¢‚°Ä‚†Ä‚†Ä‚†Ä‚††‚†Ñ‚°ñ‚†ã‚†Ä‚†Ä‚†ô‚¢ø‚£≥‚°Ä‚†ë‚¢Ñ‚†π‚£Ñ‚°Ä‚†ô‚¢Ñ‚°†‚†§‚†í‚†ö‚°ñ‚°á‚†Ä‚†ò‚£Ω‚°á‚¢†‚†É‚¢∏‚¢Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚£Ω‚£Ü‚†Ä‚†ë‚¢ù‚°ç‚†í‚†¨‚¢ß‚£Ä‚°†‚†ä‚†Ä‚†∏‚°Ä‚†Ä‚¢π‚°á‚°é‚†Ä‚°ø‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†ª‚£∫‚£ß‚†Ä‚†Ä‚†Ä‚†∞‚¢¢‚†à‚¢™‚°∑‚°Ä‚†Ä‚†ô‚°Ñ‚†Ä‚†Ä‚†±‚°Ñ‚†Ä‚†Ä‚†Ä‚¢ß‚†Ä‚¢∏‚°ª‚†Ä‚¢†‚°á‚£æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢∞‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚°è‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢£‚¢á‚†Ä‚†ë‚£Ñ‚†Ä‚†Ä‚†∏‚°Ñ‚†Ä‚†Ä‚†ò‚°Ñ‚†Ä‚†Ä‚†∏‚°Ä‚¢∏‚†Å‚†Ä‚°æ‚¢∞‚°è‚¢≥‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä"""
        history.append(("", konata_ascii))

    user_input_lower = user_input.lower()
    original_lang = detect_language(user_input)

    if any(word in user_input_lower for word in [
        "√ßiz", "√ßizer misin", "resmini yap", "g√∂rsel", 
        "draw", "can you draw",
        "Êèè„ÅÑ„Å¶", "„Ç§„É©„Çπ„Éà", "ÁîªÂÉè„ÇíÁîüÊàê"
    ]):
        prompt = user_input.strip()
        prompt_en = translate_to_english(prompt)
        image = generate_image(prompt_en)

        timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M")
        prompt_slug = slugify(prompt)
        filename = f"{timestamp}_{prompt_slug}.png"
        file_path = os.path.join(SAVE_DIR, filename)
        file_path = unique_filepath(file_path)
        image.save(file_path)

        relative_path = os.path.relpath(file_path, start=os.getcwd()).replace("\\", "/")
        history.append(("", gr.Image(value=relative_path, label=None)))
    else:
        response_en = ask_ai(user_input)  # zaten i√ßerde √ßeviriyor
        response = translate_back_to_original(response_en, original_lang)
        history.append((user_input, response))

    return "", history

def edit_image_ui(image, prompt):
    prompt_en = translate_to_english(prompt)
    edited = edit_image(prompt_en, image)
    return edited

with gr.Blocks(title="Kuroneko") as demo:
    gr.Markdown("## üò∫ Kuroneko Chat ‚Äî Let's Meow Together!")

    with gr.Tab("Chat"):
        chatbot = gr.Chatbot()
        txt = gr.Textbox(placeholder="Meoww, wanna speak together?")
        state = gr.State([])

        # üëá Kullanƒ±cƒ± mesajƒ± g√∂nderince √ßalƒ±≈üan asƒ±l sistem
        txt.submit(kuroneko_chat_ui, [txt, state], [txt, chatbot])

    with gr.Tab("Image Editor"):
        gr.Markdown("### üé® Image to Image Editing")
        with gr.Row():
            input_img = gr.Image(label="Original Image", type="pil")
            output_img = gr.Image(label="Edited Image")

        edit_prompt = gr.Textbox(label="Edit Prompt", placeholder="E.g. add cat ears or give a hat")
        edit_button = gr.Button("Edit Image")

        edit_button.click(fn=edit_image_ui, inputs=[input_img, edit_prompt], outputs=output_img)

    # üîß Otomatik ASCII tetikleyici
    demo.load(fn=lambda: kuroneko_chat_ui("", []), inputs=[], outputs=[txt, chatbot])

if __name__ == "__main__":
    demo.launch(inbrowser=True, share=False)
